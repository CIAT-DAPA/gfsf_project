geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Normal, failed, lowest and highest pixels \nCrop = ",unique(c_files$crop), "", ", system= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
facet_grid(System~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Normal, failed, lowest and highest Yields by pixels \nCrop = ",unique(c_files$crop), "", ", system= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
facet_grid(System~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Normal, failed, lowest and highest Yields by pixels \nCrop = ",unique(c_files$crop), "", ", system= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y =  = element_text(hjust = 1, size = 12))+
facet_grid(System~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Normal, failed, lowest and highest Yields by pixels \nCrop = ",unique(c_files$crop), "", ", system= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Normal, failed, lowest and highest Yields by pixels \nCrop = ",unique(c_files$crop), "", ", system= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel \nCultivo = ",unique(c_files$crop), "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel,
\n como tasa sobre todas las observaciones a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel,como tasa sobre todas las observaciones a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos se expresan como tasa sobre la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
for(c in 1:length(crops)){
for( s in 1:length(sys)){
c_files<- filter(c_files, crop==crops[c] & System==sys[s])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_",sys[s]," behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
}
cat(paste(crops[c], " It has been completed\n", sep=""))
}
c=s=1
c=s=1
c_files<- filter(c_files, crop==crops[c] & System==sys[s])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_",sys[s]," behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files);c_files$X<- NULL
c_files<- filter(c_files, crop==crops[c] & System=="IRRI")
c_files<- filter(c_files, System=="IRRI")
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files);c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
c=1
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
for(c in 1:length(crops)){
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
}
c=2
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
crops
c_files<- filter(c_files, crop==crops[c])
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files <- do.call(rbind,c_files);c_files$X<- NULL
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files<- filter(c_files, System=="IRRI")
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
library(dplyr)
library(RColorBrewer)
c=2
c_files<- filter(c_files, crop==crops[c])
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
c=3
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
c=3
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
plot(n)
c=4
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
plot(n)
c=5
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
library(dplyr)
library(RColorBrewer)
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
plot(n)
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
for(c in 1:length(crops)){
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
}
for(s in 1:length(sys)){
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System==sys[s])
for(c in 1:length(crops)){
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_", sys[s],"_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",crops[c], "", ", sistema= ", sys[s], sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
}
cat(paste(crops[c]," ", sys[s], " It has been completed\n", sep=""))
}
for(c in 1:length(crops)){
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="IRRI")
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_IRRI_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Irrigado", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
}
library(dplyr)
library(RColorBrewer)
for(c in 1:length(crops)){
c_files <- list.files(path=data_out, pattern="SummaryCases.csv", full.names = T)
c_files<- lapply(c_files,read.csv,stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
c_files<- filter(c_files, System=="RA")
c_files<- filter(c_files, crop==crops[c])
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
png(filename = paste(data_out,crops[c],"_RA_behaviour_Data",".png",sep=""),
width = 20, height = 12, units = 'in', res = 100)
require(ggplot2)
n<- ggplot(data =c_files, aes(Scenario,fpu)) +
geom_tile(aes(fill = ratio), colour = "white")+
labs(x=NULL, y=NULL, title="") +
scale_fill_gradientn(colours = hm.palette(100))+ theme_grey() +
labs(x = "",y = "") + labs(title = paste( "Rendimientos muy altos, muy bajos, fallidos, y normales a nivel de pixel. Estos, se expresan como tasa usando la distribución de datos a nivel de FPU \nCultivo = ",unique(c_files$crop), "", ", sistema= Secano", sep = ""))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + coord_equal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12))+
theme(axis.text.y = element_text(hjust = 1, size = 12))+
theme(strip.text.x = element_text(size = 12, face = "bold.italic"))+
facet_grid(.~Status, scales = "fixed", space = "fixed") +theme(strip.text=element_text(size=8))+
theme(strip.text.y = element_text(angle = 0,size = 12))
plot(n)
dev.off()
cat(paste(crops[c], " It has been completed\n", sep=""))
}
########################################### detection outliers ####################################################
gdr1<- c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/")
#Lista de tipos de sistemas
sys<- c( "IRRI", "RA")
crops<- c("Rice","Bean","Wheat","Maize", "Soybean")
reg<- read.csv("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/ListFPUs.csv",header = T,stringsAsFactors = F )
pots<- reg[,1]
data_out<-c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/outliers/")
gdr1
c_files <- list.files(path= data_out, pattern ="OutliersGCMs.csv",full.names = T)
c_files
gdr1<- c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/")
sys<- c( "IRRI", "RA")
crops<- c("Rice","Bean","Wheat","Maize", "Soybean")
reg<- read.csv("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/ListFPUs.csv",header = T,stringsAsFactors = F )
data_out<-c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/outliers/")
c=1
c_files <- list.files(path= paste(gdr1,crops[c],"/",sep=""), pattern =".csv",full.names = T)
c_files
c_files <- list.files(path=data_out, pattern =c("DataExtremes_"),full.names = T)
c_files
wfdFiles<- read.csv("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/WFD/AnalysisDataHistorical/SummaryCasesWFD.csv", header = T)
View(wfdFiles)
names(wfdFiles)
wfdFiles$X<- NULL
wfdFiles$X<- NULL
names(wfdFiles)
g=gc;rm(list=ls())
initial<-c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/ResultsIMPACT/AggregationBID/Phase1/")
updated<-c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/ResultsIMPACT/AggregationBID/Phase2/")
p1<- list(read.csv(paste(initial,"Resultados_Ciat_StCty_31_08_16_new.csv", sep = "")))
p1[1]
p2<- list.files(updated, pattern ="_05_18.csv", full.names = T)
p2<- lapply(p2, read.csv, stringsAsFactors = F)
g=gc;rm(list = ls())
########################################### Detection outliers ####################################################
gdr1<- c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/")
sys<- c( "IRRI", "RA")
crops<- c("Rice","Bean","Wheat","Maize", "Soybean")
# reg<- read.csv("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/ListFPUs.csv",header = T,stringsAsFactors = F )
# pots<- reg[,1]
data_out<-c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/BID_2/Pixels/outliers/")
c_files <- list.files(path=data_out, pattern =c("DataExtremes_"),full.names = T)
c_files
c_files <- list.files(path=data_out, pattern =c("DataExtremes_"),full.names = T)
c_files <- lapply(c_files, read.csv, stringsAsFactors = F)
c_files <- do.call(rbind,c_files)
c_files$X<- NULL
write.csv(c_files,paste(data_out, "SummaryLowest&HightestWFD.csv", sep = ""))
data_out
saveRDS(c_files,paste(data_out, "SummaryLowest&HightestWFD.RDS", sep = ""))
View(c_files)
g=gc;rm(list = ls())
g=gc;rm(list = ls())
github<- "C:/Users/CEGONZALEZ/Documents/GitHub/gfsf_project/_scripts/"
setwd("C:/Users/CEGONZALEZ/Documents/GitHub/gfsf_project/_scripts")
