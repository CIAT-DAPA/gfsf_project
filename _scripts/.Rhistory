cr <- mask(cr, mask = mapHonduras)
cr
plot(cr)
dev.off()
plot(cr)
plot(cr)
map_allo<- fortify(mapHonduras)
cr
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group=group), colour="black", size=0.5)+
geom_raster(data= cr, aes(x=long, y=lat,fill=values), alpha=0.8)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group=group), colour="black", size=0.5)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group=group), colour="black", size=0.5)+
geom_tile(data=cr, aes(x=x, y=y, fill=value), alpha=0.8)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=cr, aes(x=long, y=lat, group=group), colour="black", size=0.5)+
geom_tile(data=cr, aes(x=x, y=y, fill=value), alpha=0.8)
class(cr)
plot(cr[1])
cr
r.spdf <- as(cr, "SpatialPixelsDataFrame")
r.spdf
r.df <- as.data.frame(r.spdf)
head(r.df)
class(r.df)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=r.df, aes(x=long, y=lat, group=group), colour="black", size=0.5)+
geom_tile(data=cr, aes(x=x, y=y, fill=value), alpha=0.8)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=r.df, aes(x=long, y=lat, group=group), colour="black", size=0.5)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=r.df, aes(x=x, y=y, group=group), colour="black", size=0.5)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=r.df, aes(x=x, y=y, group=group))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=r.df, aes(x=x, y=y)
)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=r.df, aes(x=x, y=y,,fill=value))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_tile(data=r.df, aes(x=x, y=y,,fill=value))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_tile(data=r.df, aes(x=x, y=y,fill=value))
r.df
head(r.df)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_tile(data=r.df, aes(x=x, y=y,fill=spam2005v3r2_harvested.area_rice_irrigated))
colnames(r.df)[1]<-"Ha_harvest_Rice_Irri"
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=long, y=lat,fill=Ha_harvest_Rice_Irri), alpha=0.8)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal()
labs2 = 'Ha. Harvest\nRice Irrigated'
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-100,100,20)) +
labs(fill=labs2)
summary(r.df$Ha_harvest_Rice_Irri)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)+ labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA, size=0.3))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA, size=0.3))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
g=gc;rm(list = ls())
### Arroz honduras caso de analisis FSP1
###Load libraries
suppressMessages(library(dplyr))
suppressMessages(library(Hmisc))
suppressMessages(library(raster))
suppressMessages(library(ggplot2))
suppressMessages(library(reshape))
suppressMessages(library(RColorBrewer))
suppressMessages(library(maptools))
suppressMessages(library(sp))
suppressMessages(library(maptools))
suppressMessages(library(maps))
# library(ncdf)
#Directorios
path.root<- c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/FP1/real/")
#cargamos shape ALC
map <- "//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/cegonzalez/Shapefiles mundo/GAUL_2014/gisdata/"
alc <- shapefile(paste0(map,"G2014_2013_1.shp"))
plot(alc)
# raste de plantilla
tmpriceIrri <- raster("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/FP1/real/spam2005v3r2_harvested-area_rice_total.tiff")
# tmpriceRain <- raster("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/FP1/real/spam2005v3r2_harvested-area_rice_rainfed.tiff")
### mapa Honduras
mapHonduras<- alc[alc@data$ADM0_NAME=="Honduras",]
#Recorte primero por extent y luego mascara
cr <- crop(tmpriceIrri, extent(mapHonduras))
cr <- mask(cr, mask = mapHonduras)
plot(cr)
map_allo<- fortify(mapHonduras)
r.spdf <- as(cr, "SpatialPixelsDataFrame")
r.df <- as.data.frame(r.spdf)
head(r.df)
colnames(r.df)[1]<-"Ha.Rice"
labs2 = 'Hectares'
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha_harvest_Rice_Irri), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha.Rice), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,20)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
summary(r.df$Ha.Rice)
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df, aes(x=x, y=y,fill=Ha.Rice), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,50)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
geom_raster(data= r.df %>% dplyr::filter(.,Ha.Rice!=0 ), aes(x=x, y=y,fill=Ha.Rice), alpha=0.8)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,50)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_raster(data= r.df %>% dplyr::filter(.,Ha.Rice!=0 ), aes(x=x, y=y,fill=Ha.Rice), alpha=0.8)+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,50)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
hon <- shapefile(paste0(path.root,"/RegionesHonduras/Regiones_Desarrollo_prj_v2.shp"))
plot(hon)
cr <- crop(tmpriceIrri, extent(hon))
cr <- mask(cr, mask = hon)
plot(cr)
map_allo<- fortify(hon)
r.spdf <- as(cr, "SpatialPixelsDataFrame")
r.df <- as.data.frame(r.spdf)
head(r.df)
colnames(r.df)[1]<-"Ha.Rice"
labs2 = 'Hectares'
ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_raster(data= r.df %>% dplyr::filter(.,Ha.Rice!=0 ), aes(x=x, y=y,fill=Ha.Rice), alpha=0.8)+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,50)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
cr
20900*0.7
copyall
pic<- c("//dapadfs/workspace_cluster_6/Socioeconomia/GF_and_SF/FP1/real/pic/")
paste(pic,"spam_rice_honduras.png", sep="")
png(filename = paste(pic,"spam_rice_honduras.png", sep=""),
width = 20, height = 12, units = 'in', res = 100)
coro2<- ggplot() +
geom_polygon(data=map_allo, aes(x=long, y=lat, group = group),colour="white", fill="white" )+
geom_raster(data= r.df %>% dplyr::filter(.,Ha.Rice!=0 ), aes(x=x, y=y,fill=Ha.Rice), alpha=0.8)+
geom_path(data=map_allo, aes(x=long, y=lat, group = group),colour="black", size=0.25)+
theme()+ coord_equal() +
scale_fill_gradient2(low="red", mid="white", high="blue", midpoint = 0,breaks=seq(-250,250,50)) +
labs(fill=labs2)+ #labs(x=NULL, y=NULL, title="Rice Irrigated. Ha")+
theme(strip.text.x = element_text(angle = 0,size = 16, face = "bold"))+
theme(strip.text.y = element_text(angle = 0,size = 16, face = "bold"))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))+
#       theme(legend.title=element_blank())+
theme(legend.text=element_text(size=14))
#+
#      theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA, size=0.3))
plot(coro2)
dev.off()
15000/2000
10000/2000
data<- r.df
View(r.df)
rfiles<- r.df
totaArea<- sum(rfiles$Ha.Rice)
totaArea
5520/2000
5520/2200
reg<- unique(hon@data$REGION)
reg
i=1
subr<- hon[hon@data$REGION==reg[[i]],]
plot(subr)
ex <- extract(cr, subr, fun=sum, na.rm=TRUE, df=TRUE)
View(ex)
ex$zona<- reg[[i]]
colnames(ex)[2]<- "total area"
hh<- list()
hh<- list()
for (i in 1:length(reg)){
subr<- hon[hon@data$REGION==reg[[i]],]
ex <- extract(cr, subr, fun=sum, na.rm=TRUE, df=TRUE)
ex$zona<- reg[[i]]
colnames(ex)[2]<- "total area"
hh[[i]]<- ex
}
riceZonal<- do.call(rbind,hh)
View(riceZonal)
sum(riceZonal$`total area`)
totalZonal<- sum(riceZonal$`total area`)
riceZonal<- (riceZonal$`total area`/totalZonal)*100
riceZonal<- do.call(rbind,hh)
totalZonal<- sum(riceZonal$`total area`)
riceZonal$proportion<- (riceZonal$`total area`/totalZonal)*100
riceZonal$farmers<- riceZonal$`total area`/2
sum(riceZonal$farmers)
riceZonal$farmers<- round(riceZonal$`total area`/2)
region1<- hon[hon@data$REGION=="R01"]
r1 <- crop(tmpriceIrri, extent(hon))
region1<- hon[hon@data$REGION=="R01"]
r1 <- crop(tmpriceIrri, extent(region1))
region1<- hon[hon@data$REGION=="R01"]
r1 <- crop(tmpriceIrri, extent(region1))
r1 <- mask(r1, mask = region1)
plot(r1)
region1<- hon[hon@data$REGION=="R01"]
plot(region1)
View(hon@data$REGION)
region1<- hon[hon@data$REGION=="R01",]
plot(region1)
r1 <- crop(tmpriceIrri, extent(region1))
r1 <- mask(r1, mask = region1)
plot(r1)
plot(r1)
plot(region1,add=T)
plot(r1[r1!=0])
plot(region1,add=T)
plot(r1)
plot(region1,add=T)
res(r1)
r1
8/0.01
0.01*2
cr
test <- extract(cr, region1, fun=count, na.rm=TRUE, df=TRUE)
region1<- hon[hon@data$REGION=="R01",]
region1
cellStats(r1)
cellStats(r1,stat = sum())
cellStats(r1,stat = sum)
totalPixels<- cellStats(r1,stat = sum)
2*8
16/800
0.08*100
2/100
8/1000
2/10000
g=gc;rm
g=gc;rm(list = ls())
suppressMessages(library(igraph))
suppressMessages(library(animation))
suppressMessages(library(dplyr))
transmission_rate = 0.4
coins = c(rep(1, transmission_rate*100), rep(0,(1-transmission_rate)*100))
n = length(coins)
###method 1
toss = function(freq) {   # toss the coins
tossing = NULL
for (i in 1:freq ) tossing[i] = sample(coins, 1, replace=TRUE, prob=rep(1/n, times=n))
tossing = sum(tossing)
return (tossing)
}
###Method 2
# transmission_rate = 0.4
# coins = c(1, 0)
# probabilities = c(transmission_rate, 1-transmission_rate )
# # sample(coins, 1, rep=TRUE, prob=probabilities) # Generate a sequence
# # toss the coins
# toss = function(freq) {
#       tossing = NULL
#       for (i in 1:freq ) tossing[i] = sample(coins, 1, rep=TRUE, prob=probabilities)
#       tossing = sum(tossing)
#       return (tossing)
# }
#### Update graphs
update_diffusers = function(diffusers){
nearest_neighbors = data.frame(table(unlist(neighborhood(g, 1, diffusers))))
nearest_neighbors = subset(nearest_neighbors, !(nearest_neighbors[,1]%in%diffusers))
keep = unlist(lapply(nearest_neighbors[,2], toss))
new_infected = as.numeric(as.character(nearest_neighbors[,1][keep >= 1]))
class(new_infected) <- "igraph.vs"
diffusers = unique(c(diffusers, new_infected))
return(diffusers)
}
#### generate networks (Part 1)
node_number = 100
library(igraph)
node_number
# ### generate regular networks (Part 1)
# g = graph.tree(node_number, children = 2)
# g = graph.star(node_number)
# g = graph.full(node_number)
# g = graph.ring(node_number)
# g = connect.neighborhood(graph.ring(node_number), 2)
#
# ### generate regular networks (Part 2)
# g = erdos.renyi.game(node_number, 0.1)
# g = rewire.edges( graph.ring(node_number), prob = 0.8 )
# g = watts.strogatz.game(1,node_number,3,0.2)
g = barabasi.game(node_number)
graph_name = "Scale-free network"
plot(g)
####Initiate the diffusers (Part 1)
seed_num = 1
set.seed(20140301)
diffusers = sample(V(g),seed_num) ### aca se elige el difusor inicial
infected =list()
infected[[1]]= diffusers
# set the color
E(g)$color = "grey"
V(g)$color = "white"
### Initiate the diffusers (Part 2)
set.seed(2014); layout.old = layout.fruchterman.reingold(g, niter = 1000)
V(g)$color[V(g)%in% diffusers] = "red"
plot(g, layout =layout.old)
g=gc;rm(list = ls())
####ibraries
### librerias
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(RColorBrewer))
g=gc;rm(list = ls())
####ibraries
### librerias
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(RColorBrewer))
suppressMessages(library(gridExtra))
####ibraries
### librerias
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(RColorBrewer))
suppressMessages(library(gridExtra))
suppressMessages(library(igraph))
suppressMessages(library(animation))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
loadedNamespaces()
loadedNamespaces()
####ibraries
### librerias
suppressMessages(library(ggplot2))
install.packages('Rcpp', dependencies = TRUE)
####ibraries
### librerias
suppressMessages(library(ggplot2))
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages('data.table', dependencies = TRUE)
####ibraries
### librerias
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
remove.packages(c("ggplot2", "data.table"))
suppressMessages(library(ggplot2))
setwd("~/GitHub/gfsf_project/_scripts")
### Arroz honduras caso de analisis FSP1
###Load libraries
suppressMessages(library(dplyr))
suppressMessages(library(Hmisc))
suppressMessages(library(raster))
suppressMessages(library(ggplot2))
suppressMessages(library(reshape))
suppressMessages(library(RColorBrewer))
suppressMessages(library(maptools))
suppressMessages(library(sp))
suppressMessages(library(maptools))
suppressMessages(library(maps))
# library(ncdf)
loadNamespace()
#### librerias----
suppressMessages(library(rjson))
suppressMessages(library(plyr))
suppressMessages(library(tidyr))
#### librerias----
suppressMessages(library(rjson))
suppressMessages(library(plyr))
